{"version":3,"sources":["src/elements.js","src/stateManager.js","src/addSpacers.js","src/updateDropdowns.js","src/scrollPanelInfo.js","src/enlargeOnFocus.js","script.js"],"names":["dropdowns","document","querySelectorAll","mainArea","getElementById","panelRows","panelCells","panelImgs","DROPDOWNSTATE","loadState","elmtWithData","forEach","Object","keys","elmt","dataset","map","data","checkState","show","selectorsArray","image","key","includes","parentElement","style","display","addSpacers","elements","topL","createElement","topR","btmL","btmR","classList","add","element","appendChild","updateDropdowns","id","value","img","timeOut","scrollPanelInfo","shownInfo","querySelector","evt","type","top","window","scrollY","clearTimeout","setTimeout","opened","togglePanelInfo","target","classToRemove","classToAdd","panelInfo","panelCode","alt","info","contains","remove","enlargeOnFocus","clickedObj","resetStyles","width","height","padding","Array","from","newDivisions","newWidth","cell","dropdown","addEventListener"],"mappings":";;;;;;AAAA,IAAMA,YAAYC,SAASC,gBAAT,CAA0B,QAA1B,CAAlB;AACA,IAAMC,WAAWF,SAASG,cAAT,CAAwB,WAAxB,CAAjB;AACA,ACFA,IDEMC,ACFAG,YDEYP,ICFI,EAAtB,GDE2BC,gBAAT,CAA0B,YAA1B,CAAlB;AACA,IAAMI,aAAaL,SAASC,gBAAT,CAA0B,aAA1B,CAAnB;AEHA,AFIA,ACFA,ICFMyB,AFIApB,ACFAE,YDEYR,ACFA,CCFC,QFIQC,ACFrBO,CCFAkB,QDEY,ECFC,KFID,CAA0B,KEJb,EDEG,UDEhB,CAAlB;AEHEC,ADEAlB,WCFSC,IDEIA,GCFb,CAAiB,GDEjB,CAAqB,eCFO,CDEC;ACD3B,ADEAC,QCFMiB,AFID7B,GCFEa,ICFMZ,ADEb,CAAYa,IDEPd,CCFYe,GCFKe,IDEtB,EACGd,GADH,CACO,GCHM,CAAuB,KAAvB,CAAb;AACA,ADEO,AELX,QDGUe,AFGU5B,KCDDK,ECFFP,IFGGE,KEHM2B,GDEOb,IAAd,IAAsB,ECFxB,ADEN,CCF6B,KAAvB,CAAb;AACA,AEJJ,AHKW,IGLPyB,CHIA,GCAMV,AFEoB3B,OEFbJ,KFEaI,AIN9B,IFI0ByB,aAAT,CAAuB,KAAvB,CAAb;AIJJ,AJKI,ADCD,AELH,GFEE,KCEQG,AFC+B3B,OEDxBL,MFCwBK,GEDfwB,aAAT,CAAuB,KAAvB,CAAb;AEHJ,AHKC,CALD,GGAMa,IJI+CpC,YAAAA,EIJ7B,SAAlBoC,eAAkB,MAAO;AED/B,AJMId,AGPJ,ADGE,ADAF,IAAMS,ECAEM,GFICV,SAAL,AEJgBjC,CFIDkC,GAAf,ACJoB,CDID,IEJMU,IDAvBP,CDIF,EAA8B,KAA9B,CEJgB,CFIqB,AEJE,KDAnB,CDIpB,ECJ+B,UCAf,CAAlB;AFKEP,ADCJ,AELE,IFKIb,KCDGgB,QDCU,CCDf,CAAeC,GAAf,CAAmB,GDCjBjB,IELU,EDIZ,EAA8B,CCJbqB,CFKF,CELjB,EDIE,EAAqC,ACJd,GFKC,EELIC,EDI5B,GCJF;AGDF,AJMIR,AGRJ,ADIE,AHKA,AELA,MCAGc,AHKC3B,GCDGe,CEJAa,GHKI,CGLR,GHKH,CCDE,CAAeZ,AEJD,GFId,ACJQxB,CDIW,GEJlB,GDAH,CCA2BiC,ADAT,EDIhB,EAA8B,KAA9B,AEJF,EFIuC,AEJD,IDAb,EDIvB;AACAX,AEJAW,AHKF,AELE,MFKIxB,GCDCc,KEJKT,IFIV,CAAeU,AEJf,CAAgBa,EFIhB,CAAmB,AEJnB,AHKqBpC,GGLIqC,IHKGpC,ECD5B,CEJgCqC,CFIF,ADCT,AELVT,CFKsBpB,EELjC,EDIA,CEJyB,CFIY,ADCEN,EGLG,CAA1C,IFIA,ADCqB,CAAvB;AGJE,ADAD,GAFD;ADOEqB,AEJD,AHKDhB,AELD,CALD,WDSYiB,KDCK1B,MCDb,CAAoBkB,ADCtB,CAAuB,GCDrB,YDC4B;AKThC,AJSIO,ADCA,QAAG,CAACf,GCDIgB,GDCEtB,OAAN,CCDJ,ADCkBO,CCDES,EDChB,ECDJ,ADCuBR,QAAnB,CAA4Bf,cAAcc,GAAd,CAA5B,CAAJ,EAAqDH,OAAO,KAAP;ACArDiB,AEJF,AHKEf,UAAMG,ECDEa,MCJGC,KDIX,ADCA,CCDoBN,ADCAP,ICDpB,CDCA,CAA0BC,OAA1B,GAAqC,CAACP,IAAF,GAChC,MADgC,GAEhC,EAFJ;ACAAiB,AGZJ,ADQE,AHOC,GALD,CIVEiB,QHYQhB,CGZC,IAAb,MHYI,CAAoBJ,IAApB;AACD,AEJD,AHOD,CAVD,ECRE;AIIF,AJYC,AGZD,ADQE,CFbF,GGKMqB,kBAAkB,SAAlBA,eAAkB,CAACC,MAAD,EAAiD;AAAA,MAAxCC,EJgBxBhD,WIhBgE,KJgBhEA,kEIhBwC,EAAwB;AAAA,ADUvE,MCVmDiD,EJgB7BhD,QIhBiD,EHc1DkB,EDESlB,mEIhB0C,EAAO;ADWvE,MAAGiC,EHK8BxB,KGLjC,EAAYiC,MHKqBjC,OGLRwB,OAAb;AEVd,ADAE,MAAMgB,YAAYzD,SAASC,gBAAT,CAA0B,sBAA1B,CAAlB;AACA,ADWAwC,MCXMiB,MDWIP,MCXQG,KDWG,ECXIV,UDWE,GCXT,CAAqB,KAArB,EAA4Be,GAA9C;ADYE,QAAG,CAAChB,SAAJ,EAAe;ACVjBc,ADWEd,YCXQjC,EDWEc,KCXZ,ADWE,CCXgB,ADWAuB,GAAhB,GAAyBC,OAAOC,GCXR,IDWC,GAAiB,CAA1C;ACVA,ADWD,GAHS,EAGP,GCXEW,ADQK,CAAV,ICRU3B,SAAL,CAAe4B,QAAf,CAAwBN,aAAxB,CAAH,EAA2C;AACzCK,ADWL,CApBD,UCSW3B,SAAL,CAAe6B,MAAf,CAAsBP,aAAtB;ACHN,ADIK,KAFD,MAEO,IAAGC,cAAcI,KAAKtB,EAAL,KAAYoB,SAA7B,EAAwC;ACHnD,ADIME,WAAK3B,ODWIS,ECXT,CAAeR,GAAf,CAAmBsB,UAAnB;AACD;ACHL,ADIG,GAND,iBCEQ9C,OAAV,CAAkB,oBAAY;AAC5BgE,ADID,CAXD,UCOWC,gBAAT,CAA0B,QAA1B;AACD,CAFD;ADOA,IAAMZ,iBAAiB,SAAjBA,cAAiB,MAAO;ACH9B,ADIE,MAAMC,aCJCW,ADIY9B,IAAIS,MAAvB,MCJF,CAA0B,OAA1B;ADKE,MAAMW,cAAc,SAAdA,WAAc,OAAQ;ACH9BjB,ADIInC,OCJG8D,EDIEnD,KAAL,CAAW0C,KAAX,GCJJ,ADIuB,CCJC,CDIpB,OCJJ;ADKIrD,SAAKW,KAAL,CAAW2C,MAAX,GAAoB,EAApB;AACAtD,SAAKW,KAAL,CAAW4C,OAAX,GAAqB,EAArB;AACD,GAJD;;AAMA;AACA,MAAG,CAACC,MAAMC,IAAN,uBAAuBhD,QAAvB,CAAgC0C,UAAhC,CAAJ,EAAiD;;AAEjD,MAAGA,eAAeZ,MAAlB,EAA0B;AACxB;AACA;AACA,QAAMmB,eAAe,MAAM,CAA3B;AACA,QAAMC,WAAWD,eAAe,CAAhC;AACA,yBAAW7D,OAAX,CAAmB,gBAAQ;AACzB+D,WAAKjD,KAAL,CAAW0C,KAAX,GAAsBK,YAAtB;AACAE,WAAKjD,KAAL,CAAW2C,MAAX,GAAoB,EAApB;AACD,KAHD;AAIAH,eAAWxC,KAAX,CAAiB0C,KAAjB,GAA4BM,QAA5B;AACAR,eAAWxC,KAAX,CAAiB2C,MAAjB,GAA0B,MAA1B;AACAH,eAAWxC,KAAX,CAAiB4C,OAAjB,GAA2B,KAA3B;;AAEAf,oBAAgBW,UAAhB,EAA4B,MAA5B,EAAoC,MAApC;AACAZ,aAASY,UAAT;AACD,GAfD,MAeO;AACL;AACA,yBAAWtD,OAAX,CAAmB,gBAAQ;AACzBuD,kBAAYQ,IAAZ;AACD,KAFD;AAGApB,oBAAgBW,UAAhB,EAA4B,MAA5B;AACAZ,aAAS,IAAT;AACD;AACD,iCAAgBP,GAAhB;AACD,CAnCD;;kBAqCekB","file":"script.map","sourceRoot":"../_","sourcesContent":["const dropdowns = document.querySelectorAll(\"select\");\nconst mainArea = document.getElementById(\"main_area\");\nconst panelRows = document.querySelectorAll(\".panel_row\");\nconst panelCells = document.querySelectorAll(\".panel_cell\");\nconst panelImgs = document.querySelectorAll(\".panel_cell img\");\n\nexport { dropdowns, mainArea, panelRows, panelCells, panelImgs };\n","const DROPDOWNSTATE = {};\n\nconst loadState = elmtWithData => {\n  elmtWithData.forEach(elmt => {\n    Object.keys(elmt.dataset)\n      .map(data => DROPDOWNSTATE[data] = \"\");\n  });\n};\n\nconst checkState = image => {\n  let show = true;\n  const selectorsArray = Object.keys(image.dataset);\n\n  selectorsArray.forEach(key => {\n    if(!image.dataset[key].includes(DROPDOWNSTATE[key])) show = false;\n    image.parentElement.style.display = (!show)\n      ? \"none\"\n      : \"\";\n  });\n};\n\nexport { DROPDOWNSTATE, loadState, checkState };\n","const addSpacers = elements => {\n  elements.forEach(element => {\n    const topL = document.createElement(\"DIV\");\n    const topR = document.createElement(\"DIV\");\n    const btmL = document.createElement(\"DIV\");\n    const btmR = document.createElement(\"DIV\");\n    \n    topL.classList.add(\"spacers\", \"top\", \"left\");\n    topR.classList.add(\"spacers\", \"top\", \"right\");\n    btmL.classList.add(\"spacers\", \"btm\", \"left\");\n    btmR.classList.add(\"spacers\", \"btm\", \"right\");\n    \n    element.appendChild(topL);\n    element.appendChild(topR);\n    element.appendChild(btmL);\n    element.appendChild(btmR);\n  });\n};\n\nexport default addSpacers;\n","import { DROPDOWNSTATE, checkState } from \"./stateManager\";\nimport { panelImgs } from \"./elements\";\n\nconst updateDropdowns = function() {\n  DROPDOWNSTATE[this.id] = this.value;\n  panelImgs.forEach(img => {\n    checkState(img);\n  });\n};\n\nexport default updateDropdowns;\n","let timeOut;\n\nconst scrollPanelInfo = evt => {\n  const shownInfo = document.querySelector(\".panel_info.show\");\n\n  if(evt.type === \"click\" && shownInfo) {\n    shownInfo.style.top = `${window.scrollY - 2}px`;\n    return;\n  }\n\n  // This will set a timeout of 100 ms and only then run\n  // the actual callback function. If the scroll event\n  // is fired again and the 100 ms have not passed yet,\n  // it will clear the pending timeout and set a new one.\n\n  // The effect is that the callback is only run once every 100ms.\n  if(timeOut) clearTimeout(timeOut);\n  \n  timeOut = setTimeout(() => {\n    if(!shownInfo) return;\n    shownInfo.style.top = `${window.scrollY - 2}px`;\n  }, 100);\n};\n\nexport default scrollPanelInfo;\n","import { panelCells } from \"./elements\";\nimport scrollPanelInfo from \"./scrollPanelInfo\";\n\nlet opened = null;\n\nconst togglePanelInfo = (target, classToRemove = \"\", classToAdd = \"\") => {\n  const panelInfo = document.querySelectorAll(\"#sidebar .panel_info\");\n  const panelCode = target.querySelector(\"img\").alt;\n\n  panelInfo.forEach(info => {\n    if(info.classList.contains(classToRemove)) {\n      info.classList.remove(classToRemove);\n    } else if(classToAdd && info.id === panelCode) {\n      info.classList.add(classToAdd);\n    }\n  });\n};\n\nconst enlargeOnFocus = evt => {\n  const clickedObj = evt.target;\n  const resetStyles = elmt => {\n    elmt.style.width = \"\";\n    elmt.style.height = \"\";\n    elmt.style.padding = \"\";\n  };\n\n  // Early break in case user clicks on non-cell items\n  if(!Array.from(panelCells).includes(clickedObj)) return;\n\n  if(clickedObj !== opened) {\n    // If clicked object is not open,\n    // enlarge clicked object & make everything else smaller\n    const newDivisions = 100 / 6;\n    const newWidth = newDivisions * 2;\n    panelCells.forEach(cell => {\n      cell.style.width = `${newDivisions}%`;\n      cell.style.height = \"\";\n    });\n    clickedObj.style.width = `${newWidth}%`;\n    clickedObj.style.height = \"30vw\";\n    clickedObj.style.padding = \"1vw\";\n    \n    togglePanelInfo(clickedObj, \"show\", \"show\");\n    opened = clickedObj;\n  } else {\n    // If clicked object is opened, reset everything\n    panelCells.forEach(cell => {\n      resetStyles(cell);\n    });\n    togglePanelInfo(clickedObj, \"show\");\n    opened = null;\n  }\n  scrollPanelInfo(evt);\n};\n\nexport default enlargeOnFocus;\n","import { dropdowns, panelImgs, panelCells, mainArea } from \"./src/elements\";\nimport { loadState } from \"./src/stateManager\";\n\nimport addSpacers from \"./src/addSpacers\";\nimport updateDropdowns from \"./src/updateDropdowns\";\nimport enlargeOnFocus from \"./src/enlargeOnFocus\";\nimport scrollPanelInfo from \"./src/scrollPanelInfo\";\n\naddSpacers(panelCells);\nloadState(panelImgs);\n\ndropdowns.forEach(dropdown => {\n  dropdown.addEventListener(\"change\", updateDropdowns);\n});\n\nmainArea.addEventListener(\"click\", enlargeOnFocus);\n\nwindow.addEventListener(\"scroll\", scrollPanelInfo);\n"]}